<?xml version="1.0" encoding="UTF-8"?>
<section xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://docbook.org/ns/docbook ../../lib/docbook-5/xsd/docbook.xsd " xml:id="filtertypes.before">

	<title>Before</title>

	<para>
		This filter dispatches a new message to a defined target and selector. After the dispatch of the new message the
		filter processing will continue with the old message.
	</para>

	<section>
		<title>Behavior</title>

		<variablelist>
			<varlistentry>
				<term>Filter activity</term>
				<listitem>
					<simpara>Accept-call</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>Message flow</term>
				<listitem>
					<simpara>Continue</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>Resource operations</term>
				<listitem>
					<simpara>...</simpara>
				</listitem>
			</varlistentry>
		</variablelist>
	</section>

	<section xml:id="filtertypes.before.arguments">
		<title>Arguments</title>

		<informaltable rules="all">
			<tgroup cols="4">
				<colspec align="center" colwidth="3*" />
				<colspec align="center" colwidth="3*" />
				<colspec align="center" colwidth="2*" />
				<colspec align="justify" colwidth="9*" />
				<thead>
					<row>
						<entry>Name</entry>
						<entry>Type</entry>
						<entry>Required</entry>
						<entry>Description</entry>
					</row>
				</thead>
				<tbody>
					<row>
						<entry>target</entry>
						<entry>object</entry>
						<entry morerows="3">at least one must be set</entry>
						<entry morerows="2">
							This defines the message that should be dispatched. The method identified by this new
							message must have a signature that either takes a no arguments at all, or a single argument
							that is compatible with the join point context that is passed to it.
						</entry>
					</row>
					<row>
						<entry morerows="2">selector</entry>
						<entry>literal</entry>
					</row>
					<row>
						<entry>selector</entry>
					</row>
					<row>
						<entry>method program element</entry>
						<entry>
							The method program element will be used to look up a method within the set target that is
							compatible with the given method program element.
						</entry>
					</row>
				</tbody>
			</tgroup>
		</informaltable>
	</section>

	<section>
		<title>Examples</title>

		<example>
			<title>Log vault access</title>
			<programlisting language="composestar"><![CDATA[filtermodule BeforeExample {
	internals
		logger : security.AccessLogger;
	inputfilters
		vaultAccess : Before = ( selector == ['open', 'close', 
			'enter', 'leave'] ) 
		{
			filter.target = logger;
			filter.selector = 'log';
		}
}]]></programlisting>
		</example>

		<para>
			This example will send a message to the access logger whenever a certain action on the vault is performed.
		</para>
	</section>
</section>
